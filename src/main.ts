import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import * as cookieParser from 'cookie-parser';
import { ArgumentsHost, ValidationPipe } from '@nestjs/common';
import * as express from 'express';
import { HttpExceptionFilter } from './common/filters/http-exception.filter';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  app.use(express.json()); // ‡πÉ‡∏™‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö JSON ‡πÑ‡∏î‡πâ
  app.use(express.urlencoded({ extended: true })); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö form-urlencoded (optional)
  app.use(cookieParser());
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true, // ‡∏ï‡∏±‡∏î property ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô DTO ‡∏≠‡∏≠‡∏Å
      forbidNonWhitelisted: true, // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠ prop ‡πÅ‡∏õ‡∏•‡∏Å ‚Üí error
      transform: true, // ‡πÅ‡∏õ‡∏•‡∏á type ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DTO ‡πÄ‡∏ä‡πà‡∏ô string -> number
    }),
  );
  app.useGlobalFilters(
    {
      catch(exception: any, host: ArgumentsHost) {
        console.error('üî• Caught exception:', exception);
        throw exception;
      },
    },
    new HttpExceptionFilter(),
  );

  app.enableCors({
    origin: [
      'https://admin.paodev.xyz',
      'https://paodev.xyz',
      'localhost',
      'localhost:3001',
    ], // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Next.js ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô‡∏ö‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï 3001
    credentials: true, // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á cookies ‡∏´‡∏£‡∏∑‡∏≠ headers ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
  });
  await app.listen(process.env.PORT ?? 3000, '0.0.0.0');
}
bootstrap();
